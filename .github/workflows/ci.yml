name: CI

on:
  push:
    # Don't run this workflow when a tag is pushed.
    branches:
      - '*'
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  bintray-cleanup:
    runs-on: ubuntu-18.04

    steps:
      - name: Remove old artifacts from Bintray
        shell: bash
        run: |
          curl -sfSLO 'https://raw.githubusercontent.com/Ortham/ci-scripts/2.1.4/delete_old_bintray_versions.py'
          python3 delete_old_bintray_versions.py -g loot/loot -b loot/snapshots/loot -u wrinklyninja -k ${{ secrets.BINTRAY_API_KEY }} -t ${{ secrets.GITHUB_TOKEN }} -n 10
        if: github.event_name == 'push'

  linux:
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Get Boost metadata
        id: boost-metadata
        run: |
          echo "::set-output name=root::~/boost_1_72_0"
          echo "::set-output name=librarydir::~/boost_1_72_0/stage/64/lib"

      - name: Boost cache
        id: boost-cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.boost-metadata.outputs.root }}/boost
            ${{ steps.boost-metadata.outputs.root }}/stage
          key: ${{ runner.os }}-Boost-1.72.0

      - name: Install JS dependencies
        run: yarn install

      - name: Lint JS code
        run: yarn lint

      - name: Test JS code
        run: yarn test

      - name: Install C++ dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-upgrade \
            libbz2-dev \
            libhttp-parser-dev \
            libssh2-1-dev \
            libssl-dev \
            libx11-dev \
            libgtk2.0-dev \
            libnss3-dev \
            libgconf2-dev \
            libxss-dev \
            libasound2-dev \
            libxtst-dev \
            libicu-dev \
            g++-8

      - name: Download & build Boost
        run: |
          wget https://raw.githubusercontent.com/Ortham/ci-scripts/2.1.2/install_boost.py
          python install_boost.py --directory ~ --boost-version 1.72.0 -a 64 -t gcc-8 locale system
        if: steps.boost-cache.outputs.cache-hit != 'true'

      - name: Run CMake
        run: |
          mkdir build
          cd build
          export CXX="g++-8" CC="gcc-8"
          cmake .. -DBOOST_ROOT=${{ steps.boost-metadata.outputs.root }} -DBOOST_LIBRARYDIR=${{ steps.boost-metadata.outputs.librarydir }}
          make all

      - name: Run C++ tests
        run: |
          cd build
          ./loot_gui_tests

      - name: Install packages for building docs
        run: |
          python -m pip install -r docs/requirements.txt
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Build docs
        run: sphinx-build -b html docs build/docs/html

      - name: Build translation message object files
        run: node scripts/potomo.js

      - name: Build archive
        run: node scripts/archive.js

      - name: Get descriptive LOOT version
        id: get-loot-version
        shell: bash
        run: |
          GIT_DESCRIBE=$(git describe --tags --long --abbrev=7)
          GIT_REF=${{ github.ref }}
          LOOT_DESC_REF=${GIT_DESCRIBE}_${GIT_REF#refs/*/}
          LOOT_SAFE_DESC_REF=${LOOT_DESC_REF//[\/<>\"|]/_}
          echo "::set-output name=version::$LOOT_SAFE_DESC_REF"
        if: github.event_name == 'push'

      - name: Get LOOT artifact basename
        id: get-artifact-basename
        shell: bash
        run: |
          VERSION="${{ steps.get-loot-version.outputs.version }}"
          echo "::set-output name=basename::loot_${VERSION}-Linux"
        if: github.event_name == 'push'

      - name: Upload archive to BinTray
        shell: bash
        run: |
          VERSION="${{ steps.get-loot-version.outputs.version }}"
          FILENAME="${{ steps.get-artifact-basename.outputs.basename }}.tar.xz"

          curl -sfSL -T "build/loot_${VERSION}.tar.xz" -u "wrinklyninja:${{ secrets.BINTRAY_API_KEY }}" "https://bintray.com/api/v1/content/loot/snapshots/loot/${VERSION}/${FILENAME}?publish=1&override=1"
        if: github.event_name == 'push'

  windows:
    runs-on: windows-2016

    strategy:
      matrix:
        platform: [Win32, x64]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get pip cache dir
        id: pip-cache-dir-path
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: pip cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - name: Yarn cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Get Boost metadata
        id: boost-metadata
        run: |
          if ("${{ matrix.platform }}" -eq "Win32") {
            $addressModel = 32
          } else {
            $addressModel = 64
          }

          echo "::set-output name=address-model::$addressModel"
          echo "::set-output name=root::${{ github.workspace }}/boost_1_72_0"
          echo "::set-output name=librarydir::${{ github.workspace }}/boost_1_72_0/stage/$addressModel/lib"

      - name: Boost cache
        id: boost-cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.boost-metadata.outputs.root }}/boost
            ${{ steps.boost-metadata.outputs.root }}/stage
          key: ${{ runner.os }}-${{ matrix.platform }}-Boost-1.72.0

      - name: Install JS dependencies
        run: yarn install

      - name: Lint JS code
        run: yarn lint

      - name: Test JS code
        run: yarn test

      - name: Download and extract svg_to_ico
        run: |
          curl -sfSLO 'https://github.com/Ortham/svg_to_ico/releases/download/1.1.0/svg_to_ico.7z'
          7z e -y svg_to_ico.7z

      - name: Generate ICO file
        run: .\svg_to_ico.exe -i resources\icon.svg -o build\icon\icon.ico

      - name: Download & build Boost
        run: |
          curl -sSfLO https://raw.githubusercontent.com/Ortham/ci-scripts/2.1.2/install_boost.py
          python install_boost.py --directory ${{ github.workspace }} --boost-version 1.72.0 -a ${{ steps.boost-metadata.outputs.address-model }} locale system
        if: steps.boost-cache.outputs.cache-hit != 'true'

      - name: Run CMake
        run: |
          cd build
          cmake .. -G "Visual Studio 15 2017" -A ${{ matrix.platform }} -DBOOST_ROOT="${{ steps.boost-metadata.outputs.root }}" -DBOOST_LIBRARYDIR="${{ steps.boost-metadata.outputs.librarydir }}" -DMSVC_STATIC_RUNTIME=ON
          cmake --build . --config Release

      - name: Run C++ tests
        run: |
          cd build/Release
          .\loot_gui_tests.exe

      - name: Install packages for building docs
        run: |
          python -m pip install -r docs/requirements.txt

      - name: Build docs
        run: sphinx-build -b html docs build\docs\html

      - name: Build translation message object files
        run: node scripts\potomo.js

      - name: Build archive
        run: node scripts\archive.js

      - name: Build installer
        run: scripts\build_installer.ps1

      - name: Get descriptive LOOT version
        id: get-loot-version
        shell: bash
        run: |
          GIT_DESCRIBE=$(git describe --tags --long --abbrev=7)
          GIT_REF=${{ github.ref }}
          LOOT_DESC_REF=${GIT_DESCRIBE}_${GIT_REF#refs/*/}
          LOOT_SAFE_DESC_REF=${LOOT_DESC_REF//[\/<>\"|]/_}
          echo "::set-output name=version::$LOOT_SAFE_DESC_REF"
        if: github.event_name == 'push'

      - name: Get LOOT artifact basename
        id: get-artifact-basename
        shell: bash
        run: |
          VERSION="${{ steps.get-loot-version.outputs.version }}"
          if [[ "${{ matrix.platform }}" == "Win32" ]]
          then
            PLATFORM=win32
          else
            PLATFORM=win64
          fi
          echo "::set-output name=basename::loot_${VERSION}-${PLATFORM}"
        if: github.event_name == 'push'

      - name: Upload archive to BinTray
        shell: bash
        run: |
          VERSION="${{ steps.get-loot-version.outputs.version }}"
          FILENAME="${{ steps.get-artifact-basename.outputs.basename }}.7z"

          curl -sfSL -T "build/loot_${VERSION}.7z" -u "wrinklyninja:${{ secrets.BINTRAY_API_KEY }}" "https://bintray.com/api/v1/content/loot/snapshots/loot/${VERSION}/${FILENAME}?publish=1&override=1"
        if: github.event_name == 'push'

      - name: Upload installer to BinTray
        shell: bash
        run: |
          VERSION="${{ steps.get-loot-version.outputs.version }}"
          FILENAME="${{ steps.get-artifact-basename.outputs.basename }}.exe"

          curl -sfSL -T "build/LOOT Installer.exe" -u "wrinklyninja:${{ secrets.BINTRAY_API_KEY }}" "https://bintray.com/api/v1/content/loot/snapshots/loot/${VERSION}/${FILENAME}?publish=1&override=1"
        if: github.event_name == 'push' && matrix.platform == 'Win32'
